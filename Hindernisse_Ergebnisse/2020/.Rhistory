df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
View(df_Halbfinale)
View(df)
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
View(df_Halbfinale)
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
View(df_Halbfinale)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- ''
View(df_Halbfinale)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- ''
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
View(df_Halbfinale_Hindernis)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
View(df_Halbfinale)
for (i in 1:length(df_Halbfinale[,10]){
if (df_Halbfinale[i,10] == NA & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA){
df_Halbfinale[i,10] <- 1
}
}
for (i in 1:length(df_Halbfinale[,10]){
i
}
for (i in 1:length(df_Halbfinale[,10])){
i
}
for (i in 1:length(df_Halbfinale[,10])){
print(i)
}
for (i in 1:length(df_Halbfinale[,10])){
if (df_Halbfinale[i,10] == NA & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA){
df_Halbfinale[i,10] <- 1
}
}
for (i in 1:length(df_Halbfinale[,10])){
if (df_Halbfinale[i,10] == NA & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA)){
df_Halbfinale[i,10] <- 1
}
}
df_Halbfinale[df_Halbfinale[i,10] == NA & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA)]
df_Halbfinale[df_Halbfinale[i,10] == NA & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA),]
df_Halbfinale[df_Halbfinale[i,10] == NA]
df_Halbfinale[df_Halbfinale[i,10] == NA,]
df_Halbfinale[is.na(df_Halbfinale[i,10]),]
df_Halbfinale[is.na(df_Halbfinale[,10]),]
for (i in 1:length(df_Halbfinale[,10])){
if (is.na(df_Halbfinale[i,10]) & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA)){
df_Halbfinale[i,10] <- 1
}
}
df_Halbfinale[is.na(df_Halbfinale[,10])&df_Halbfinale[,9] !=0,]
df_Halbfinale[is.na(df_Halbfinale[,9] !=0,]
df_Halbfinale[df_Halbfinale[,9] !=0,]
df_Halbfinale[is.na(df_Halbfinale[,10])&(df_Halbfinale[,9] !=0),]
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,2:11])
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,2:11])
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
for i in df_Halbfinale_Hindernis[2,c(2:11)]:
print(class(i))
for i in df_Halbfinale_Hindernis[,c(2:11)]:
print(class(i))
for i in df_Halbfinale_Hindernis[,c(2, 3, 11)]:
print(class(i))
class(df_Halbfinale_Hindernis[,2])
class(df_Halbfinale_Hindernis[,3])
class(df_Halbfinale_Hindernis[,4])
class(df_Halbfinale_Hindernis[,5])
class(df_Halbfinale_Hindernis[,6])
class(df_Halbfinale_Hindernis[,6])
class(df_Halbfinale_Hindernis[,7])
class(df_Halbfinale_Hindernis[,8])
class(df_Halbfinale_Hindernis[,9])
class(df_Halbfinale_Hindernis[,10])
class(df_Halbfinale_Hindernis[,11])
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.numeric(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.numeric(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
}
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
View(df_Halbfinale_Hindernis)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
View(df_Halbfinale_1)
write_csv(as.data.frame(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
write_csv(as.data.frame(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv"))
write_csv(as.data.frame(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv"))
write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
df_Halbfinale[is.na(df_Halbfinale) == FALSE]
###################################
# Formatiere Halbfinal Ergebnisse #
###################################
setwd("~/DataScience/Ninja_Projekt/Hindernisse_Ergebnisse/2020/")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
for (i in 1:length(df_Halbfinale[,10])){
if (is.na(df_Halbfinale[i,10]) & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA)){
df_Halbfinale[i,10] <- 1
}
}
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.integer(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.numeric(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
# Schreibe mehrere Wörter aus verschiedenen Feldern in eine df-Zelle (Geschaffte Hindernisse/ Staffeln)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
df_Halbfinale[is.na(df_Halbfinale) == FALSE]
###################################
# Formatiere Halbfinal Ergebnisse #
###################################
setwd("~/DataScience/Ninja_Projekt/Hindernisse_Ergebnisse/2020/")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
for (i in 1:length(df_Halbfinale[,10])){
if (is.na(df_Halbfinale[i,10]) & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA)){
df_Halbfinale[i,10] <- 1
}
}
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.integer(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.numeric(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
# Schreibe mehrere Wörter aus verschiedenen Feldern in eine df-Zelle (Geschaffte Hindernisse/ Staffeln)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
#write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
###################################
# Formatiere Halbfinal Ergebnisse #
###################################
setwd("~/DataScience/Ninja_Projekt/Hindernisse_Ergebnisse/2020/")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0&is.na(df_Halbfinale$Riesenrad)),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
for (i in 1:length(df_Halbfinale[,10])){
if (is.na(df_Halbfinale[i,10]) & (df_Halbfinale[i,9] != 0 | df_Halbfinale[i,9] != NA)){
df_Halbfinale[i,10] <- 1
}
}
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.integer(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.integer(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Bungee.Flug <- as.integer(df_Halbfinale_Hindernis$Bungee.Flug)
df_Halbfinale_Hindernis$Feder.Bretter <- as.integer(df_Halbfinale_Hindernis$Feder.Bretter)
df_Halbfinale_Hindernis$Flug.Wippen <- as.integer(df_Halbfinale_Hindernis$Flug.Wippen)
df_Halbfinale_Hindernis$Wand <- as.integer(df_Halbfinale_Hindernis$Wand)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
# Schreibe mehrere Wörter aus verschiedenen Feldern in eine df-Zelle (Geschaffte Hindernisse/ Staffeln)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
#write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
View(df_Halbfinale_1)
###################################
# Formatiere Halbfinal Ergebnisse #
###################################
setwd("~/DataScience/Ninja_Projekt/Hindernisse_Ergebnisse/2020/")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0&is.na(df_Halbfinale$Riesenrad)),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.integer(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.integer(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Bungee.Flug <- as.integer(df_Halbfinale_Hindernis$Bungee.Flug)
df_Halbfinale_Hindernis$Feder.Bretter <- as.integer(df_Halbfinale_Hindernis$Feder.Bretter)
df_Halbfinale_Hindernis$Flug.Wippen <- as.integer(df_Halbfinale_Hindernis$Flug.Wippen)
df_Halbfinale_Hindernis$Wand <- as.integer(df_Halbfinale_Hindernis$Wand)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
# Schreibe mehrere Wörter aus verschiedenen Feldern in eine df-Zelle (Geschaffte Hindernisse/ Staffeln)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
#write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
View(df_Halbfinale_1)
is.na(df_Halbfinale$Riesenrad)
df_Halbfinale[is.na(df_Halbfinale$Riesenrad)]
df_Halbfinale[is.na(df_Halbfinale$Riesenrad)]
df_Halbfinale[is.na(df_Halbfinale$Riesenrad),]
df_Halbfinale[is.na(df_Halbfinale$Riesenrad) == TRUE,]
###################################
# Formatiere Halbfinal Ergebnisse #
###################################
setwd("~/DataScience/Ninja_Projekt/Hindernisse_Ergebnisse/2020/")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0&is.na(df_Halbfinale$Riesenrad)),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0&is.na(df_Halbfinale$Riesenrad)),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.integer(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.integer(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Bungee.Flug <- as.integer(df_Halbfinale_Hindernis$Bungee.Flug)
df_Halbfinale_Hindernis$Feder.Bretter <- as.integer(df_Halbfinale_Hindernis$Feder.Bretter)
df_Halbfinale_Hindernis$Flug.Wippen <- as.integer(df_Halbfinale_Hindernis$Flug.Wippen)
df_Halbfinale_Hindernis$Wand <- as.integer(df_Halbfinale_Hindernis$Wand)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
# Schreibe mehrere Wörter aus verschiedenen Feldern in eine df-Zelle (Geschaffte Hindernisse/ Staffeln)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
#write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
View(df_Halbfinale_1)
###################################
# Formatiere Halbfinal Ergebnisse #
###################################
setwd("~/DataScience/Ninja_Projekt/Hindernisse_Ergebnisse/2020/")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
# Finden von leeren Zeilen und löschen
df_Halbfinale['Name'][is.na(df_Halbfinale['Sprung.Tritte'])]
#df_Halbfinale <- df_Halbfinale[-44,]
# Zeit korrigieren (Steht sonst auch bei letzten Hindernissen)
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=1&df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz!=0),]$Doppelter.Rohrschlitten.mit.Cargo.Netz <- NA
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit <- paste(df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Zeit, df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad)
df_Halbfinale[(df_Halbfinale$Riesenrad!=1&df_Halbfinale$Riesenrad!=0),]$Riesenrad <- NA
# Hinderniss bei dem Athlet gefallen ist
# (Anschließend können NAs mit 0 afgefüllt werden, damit Summe der bewälitigten Hindernisse berechnet werden kann)
# Definiere Funktion für "Gefallen bei Hindernis XY"
get_hindernisse <- function(df) {
for (i in colnames(df)){
df$Gefallen[df[i] == 0] <- i
};
return(df)
}
df_Halbfinale_Hindernis <- get_hindernisse(df_Halbfinale)
df_Halbfinale_Hindernis[is.na(df_Halbfinale_Hindernis)] <- 0
df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.integer(df_Halbfinale_Hindernis$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale_Hindernis$Riesenrad <- as.integer(df_Halbfinale_Hindernis$Riesenrad)
df_Halbfinale_Hindernis$Bungee.Flug <- as.integer(df_Halbfinale_Hindernis$Bungee.Flug)
df_Halbfinale_Hindernis$Feder.Bretter <- as.integer(df_Halbfinale_Hindernis$Feder.Bretter)
df_Halbfinale_Hindernis$Flug.Wippen <- as.integer(df_Halbfinale_Hindernis$Flug.Wippen)
df_Halbfinale_Hindernis$Wand <- as.integer(df_Halbfinale_Hindernis$Wand)
df_Halbfinale_Hindernis$Geschafft <- rowSums(df_Halbfinale_Hindernis[,c(2:11)])
# Schreibe mehrere Wörter aus verschiedenen Feldern in eine df-Zelle (Geschaffte Hindernisse/ Staffeln)
get_hindernisse_geschafft <- function(df) {
for (n in colnames(df[,c(2:11)])){
df$Bezwungen[df[n] == 1] <- paste(df$Bezwungen[df[n] == 1], n)
};
return(df)
}
df_Halbfinale_1 <- get_hindernisse_geschafft(df_Halbfinale_Hindernis)
#write_csv(df_Halbfinale_1, "20_Hindernisse_Halbfinale1.csv")
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
class(df_Halbfinale[15,12])
class(df_Halbfinale[14,12])
is.na(df_Halbfinale[15,12])
is.na(df_Halbfinale)
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
is.na(df_Halbfinale)
df_Halbfinale == ''
df_Halbfinale[(df_Halbfinale%in%''),] <- NA
View(df_Halbfinale)
df_Halbfinale[(df_Halbfinale==''),] <- NA
for i in colnames(df_Halbfinale){
df_Halbfinale$i[(df_Halbfinale=='')] <- NA
}
for (i in colnames(df_Halbfinale)){
df_Halbfinale$i[(df_Halbfinale=='')] <- NA
}
df_Halbfinale[1,"Zeit"]
for (i in colnames(df_Halbfinale)){
df_Halbfinale[(df_Halbfinale[i]==''), i] <- NA
}
for (i in colnames(df_Halbfinale)){
df_Halbfinale[(df_Halbfinale[i]%in%''), i] <- NA
}
View(df_Halbfinale)
for (i in colnames(df_Halbfinale)){
df_Halbfinale <- df_Halbfinale[(df_Halbfinale[i]%in%''), i] <- NA
}
df_Halbfinale[(df_Halbfinale["Zeit"]%in%''), "Zeit"] <- NA
df_Halbfinale[(df_Halbfinale["Zeit"]==''), "Zeit"] <- NA
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%'')] <- NA
df_Halbfinale$Zeit
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%'')] <- NA
View(df_Halbfinale)
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%'')]
df_Halbfinale[as.character(df_Halbfinale["Zeit"])]
df_Halbfinale$Zeit[as.character(df_Halbfinale["Zeit"])]
df_Halbfinale <- df_Halbfinale$Zeit[as.character(df_Halbfinale["Zeit"])]
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
df_Halbfinale$Zeit <- as.character(df_Halbfinale["Zeit"])
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%'')] <- NA
View(df_Halbfinale)
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
for (i in colnames(df_Halbfinale)){
df_Halbfinale[(df_Halbfinale[i]%in%''), i] <- NA
}
View(df_Halbfinale)
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%'')]
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Zeit
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%'')] <- NA
View(df_Halbfinale)
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%"")] <- NA
View(df_Halbfinale)
df_Halbfinale$Zeit[(df_Halbfinale["Zeit"]%in%"")]
df_Halbfinale$Zeit[(df_Halbfinale$Zeit%in%"")]
df_Halbfinale$Zeit[(df_Halbfinale$Zeit%in%"")] <- NA
View(df_Halbfinale)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz%in%"")] <- NA
df_Halbfinale$Riesenrad[(df_Halbfinale$Riesenrad%in%"")] <- NA
View(df_Halbfinale)
df_Halbfinale <- read.delim("20_Ergebnisse_Halbfinale_1_format.txt")
df_Halbfinale$Zeit <- as.character(df_Halbfinale$Zeit)
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz <- as.character(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz)
df_Halbfinale$Riesenrad <- as.character(df_Halbfinale$Riesenrad)
df_Halbfinale$Zeit[(df_Halbfinale$Zeit%in%"")] <- NA
df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz[(df_Halbfinale$Doppelter.Rohrschlitten.mit.Cargo.Netz%in%"")] <- NA
df_Halbfinale$Riesenrad[(df_Halbfinale$Riesenrad%in%"")] <- NA
View(df_Halbfinale)
df_Halbfinale$Riesenrad[(df_Halbfinale$Riesenrad%in%""&df_Halbfinale$Riesenrad%in%" ")] <- NA
View(df_Halbfinale)
df_Halbfinale$Riesenrad[48]
df_Halbfinale$Riesenrad[(df_Halbfinale$Riesenrad%in%""&df_Halbfinale$Riesenrad%in%" "&df_Halbfinale$Riesenrad%in%"  ")] <- NA
View(df_Halbfinale)
df_Halbfinale$Riesenrad[(df_Halbfinale$Riesenrad%in%""&df_Halbfinale$Riesenrad%in%" "|df_Halbfinale$Riesenrad%in%"  ")] <- NA
View(df_Halbfinale)
for (i in colnames(df_Halbfinale)){
df_Halbfinale$Gefallen[df_Halbfinale[i]%in%0] <- 'fell'
}
View(df_Halbfinale)
df_Halbfinale['Riesenrad']%in%0
df_Halbfinale['Riesenrad']==0
for (i in colnames(df_Halbfinale)){
df_Halbfinale$Gefallen[df_Halbfinale[i]==0] <- 'fell'
}
